--- exact-image-0.9.1/codecs/gif.cc.orig
+++ exact-image-0.9.1/codecs/gif.cc
@@ -59,10 +59,11 @@
   GifByteType* Extension;
   ColorMapObject *ColorMap = NULL;
   int ExtCode;
+  int GifError;
   
-  if ((GifFile = DGifOpen (stream, &GIFInputFunc)) == NULL)
+  if ((GifFile = DGifOpen (stream, &GIFInputFunc, &GifError)) == NULL)
     {
-      PrintGifError();
+      std::cerr << "GIF Error: " << GifErrorString(GifError) << std::endl;
       return false;
     }
   
@@ -74,7 +75,7 @@
   /* Scan the content of the GIF file and load the image(s) in: */
   do {
     if (DGifGetRecordType(GifFile, &RecordType) == GIF_ERROR) {
-      PrintGifError();
+      std::cerr << "GIF Error: " << GifErrorString(GifError) << std::endl;
       return false;
     }
     
@@ -83,7 +84,7 @@
     switch (RecordType) {
     case IMAGE_DESC_RECORD_TYPE:
       if (DGifGetImageDesc(GifFile) == GIF_ERROR) {
-	PrintGifError();
+	std::cerr << "GIF Error: " << GifErrorString(GifError) << std::endl;
 	return false;
       }
       
@@ -104,7 +105,7 @@
 	       j += InterlacedJumps[i]) {
 	    if (DGifGetLine(GifFile, &image.getRawData()[j*image.stride()+Col],
 			    Width) == GIF_ERROR) {
-	      PrintGifError();
+	      std::cerr << "GIF Error: " << GifErrorString(GifError) << std::endl;
 	      return false;
 	    }
 	  }
@@ -113,7 +114,7 @@
 	for (int i = 0; i < Height; ++i) {
 	  if (DGifGetLine(GifFile, &image.getRawData()[Row++ * image.stride()+Col],
 			  Width) == GIF_ERROR) {
-	    PrintGifError();
+	    std::cerr << "GIF Error: " << GifErrorString(GifError) << std::endl;
 	    return false;
 	  }
 	}
@@ -122,12 +123,12 @@
     case EXTENSION_RECORD_TYPE:
       /* Skip any extension blocks in file: */
       if (DGifGetExtension(GifFile, &ExtCode, &Extension) == GIF_ERROR) {
-	PrintGifError();
+	std::cerr << "GIF Error: " << GifErrorString(GifError) << std::endl;
 	return false;
       }
       while (Extension != NULL) {
 	if (DGifGetExtensionNext(GifFile, &Extension) == GIF_ERROR) {
-	  PrintGifError();
+	  std::cerr << "GIF Error: " << GifErrorString(GifError) << std::endl;
 	  return false;
 	}
       }
@@ -155,7 +156,7 @@
   // convert colormap to our 16bit "TIFF"format
   colorspace_de_palette (image, ColorMap->ColorCount, rmap, gmap, bmap);
   
-  EGifCloseFile(GifFile);
+  EGifCloseFile(GifFile, NULL);
 
   return true;
 }
@@ -166,7 +167,7 @@
   GifFileType* GifFile;
   GifByteType* Ptr;
   
-  if ((GifFile = EGifOpen (stream, &GIFOutputFunc)) == NULL)
+  if ((GifFile = EGifOpen (stream, &GIFOutputFunc, &GifError)) == NULL)
     {
       std::cerr << "Error preparing GIF file for writing." << std::endl;
       return false;
@@ -175,7 +176,7 @@
   int ColorMapSize = 256;
   
   // later use our own colormap generation
-  ColorMapObject* OutputColorMap = MakeMapObject(ColorMapSize, NULL);
+  ColorMapObject* OutputColorMap = GifMakeMapObject(ColorMapSize, NULL);
   if (!OutputColorMap)
     return false;
   
@@ -203,7 +204,7 @@
   }
    
   
-  if (QuantizeBuffer(image.w, image.h, &ColorMapSize,
+  if (GifQuantizeBuffer(image.w, image.h, &ColorMapSize,
 		     RedBuffer, GreenBuffer, BlueBuffer,
 		     OutputBuffer, OutputColorMap->Colors) == GIF_ERROR) {
     return false;
@@ -215,7 +216,7 @@
   if (EGifPutScreenDesc(GifFile, image.w, image.h,
 			ColorMapSize, 0, OutputColorMap) == GIF_ERROR ||
       EGifPutImageDesc(GifFile, 0, 0, image.w, image.h,
-		       FALSE, NULL) == GIF_ERROR)
+		       false, NULL) == GIF_ERROR)
     {
       std::cerr << "Error writing GIF header." << std::endl;
       return false;
@@ -234,7 +235,7 @@
 
   delete (RedBuffer); delete (GreenBuffer); delete (BlueBuffer);
 
-  EGifCloseFile(GifFile);
+  EGifCloseFile(GifFile, NULL);
   return true;
 }
 
